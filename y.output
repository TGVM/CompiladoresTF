   0  $accept : prog $end

   1  $$1 :

   2  prog : $$1 dList mainF

   3  $$2 :

   4  $$3 :

   5  mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 '}'

   6  dList : decl dList
   7        |

   8  decl : type ID ';'

   9  type : INT
  10       | FLOAT
  11       | BOOL

  12  lcmd : lcmd cmd
  13       |

  14  cmd : exp ';'
  15      | '{' lcmd '}'
  16      | WRITE '(' LIT ')' ';'

  17  $$4 :

  18  cmd : WRITE '(' LIT $$4 ',' exp ')' ';'
  19      | READ '(' ID ')' ';'

  20  $$5 :

  21  $$6 :

  22  cmd : WHILE $$5 '(' exp ')' $$6 cmdWhile

  23  $$7 :

  24  cmd : DO $$7 cmd WHILE '(' exp ')' ';'

  25  $$8 :

  26  $$9 :

  27  $$10 :

  28  cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmdFor

  29  $$11 :

  30  cmd : IF '(' exp $$11 ')' cmd restoIf

  31  ExpOpc : exp
  32         |

  33  cmdFor : cmd
  34         | CONTINUE ';'
  35         | BREAK ';'

  36  cmdWhile : cmd
  37           | CONTINUE ';'
  38           | BREAK ';'

  39  $$12 :

  40  restoIf : ELSE $$12 cmd
  41          |

  42  exp : NUM
  43      | TRUE
  44      | FALSE
  45      | ID
  46      | ID INCR
  47      | INCR ID
  48      | '(' exp ')'
  49      | '!' exp
  50      | exp '+' exp
  51      | exp '-' exp
  52      | exp '*' exp
  53      | exp '/' exp
  54      | exp '%' exp
  55      | exp '>' exp
  56      | exp '<' exp
  57      | exp EQ exp
  58      | exp LEQ exp
  59      | exp GEQ exp
  60      | exp NEQ exp
  61      | exp OR exp
  62      | exp AND exp
  63      | ID '=' exp

state 0
	$accept : . prog $end  (0)
	$$1 : .  (1)

	.  reduce 1

	prog  goto 1
	$$1  goto 2


state 1
	$accept : prog . $end  (0)

	$end  accept


state 2
	prog : $$1 . dList mainF  (2)
	dList : .  (7)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	VOID  reduce 7

	type  goto 6
	dList  goto 7
	decl  goto 8


state 3
	type : INT .  (9)

	.  reduce 9


state 4
	type : FLOAT .  (10)

	.  reduce 10


state 5
	type : BOOL .  (11)

	.  reduce 11


state 6
	decl : type . ID ';'  (8)

	ID  shift 9
	.  error


state 7
	prog : $$1 dList . mainF  (2)

	VOID  shift 10
	.  error

	mainF  goto 11


state 8
	dList : decl . dList  (6)
	dList : .  (7)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	VOID  reduce 7

	type  goto 6
	dList  goto 12
	decl  goto 8


state 9
	decl : type ID . ';'  (8)

	';'  shift 13
	.  error


state 10
	mainF : VOID . MAIN '(' ')' $$2 '{' lcmd $$3 '}'  (5)

	MAIN  shift 14
	.  error


state 11
	prog : $$1 dList mainF .  (2)

	.  reduce 2


state 12
	dList : decl dList .  (6)

	.  reduce 6


state 13
	decl : type ID ';' .  (8)

	.  reduce 8


state 14
	mainF : VOID MAIN . '(' ')' $$2 '{' lcmd $$3 '}'  (5)

	'('  shift 15
	.  error


state 15
	mainF : VOID MAIN '(' . ')' $$2 '{' lcmd $$3 '}'  (5)

	')'  shift 16
	.  error


state 16
	mainF : VOID MAIN '(' ')' . $$2 '{' lcmd $$3 '}'  (5)
	$$2 : .  (3)

	.  reduce 3

	$$2  goto 17


state 17
	mainF : VOID MAIN '(' ')' $$2 . '{' lcmd $$3 '}'  (5)

	'{'  shift 18
	.  error


state 18
	mainF : VOID MAIN '(' ')' $$2 '{' . lcmd $$3 '}'  (5)
	lcmd : .  (13)

	.  reduce 13

	lcmd  goto 19


state 19
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd . $$3 '}'  (5)
	lcmd : lcmd . cmd  (12)
	$$3 : .  (4)

	ID  shift 20
	NUM  shift 21
	READ  shift 22
	WRITE  shift 23
	IF  shift 24
	WHILE  shift 25
	TRUE  shift 26
	FALSE  shift 27
	FOR  shift 28
	INCR  shift 29
	DO  shift 30
	'!'  shift 31
	'('  shift 32
	'{'  shift 33
	'}'  reduce 4

	$$3  goto 34
	cmd  goto 35
	exp  goto 36


state 20
	exp : ID .  (45)
	exp : ID . INCR  (46)
	exp : ID . '=' exp  (63)

	INCR  shift 37
	'='  shift 38
	EQ  reduce 45
	LEQ  reduce 45
	GEQ  reduce 45
	NEQ  reduce 45
	AND  reduce 45
	OR  reduce 45
	'>'  reduce 45
	'<'  reduce 45
	'+'  reduce 45
	'-'  reduce 45
	'*'  reduce 45
	'/'  reduce 45
	'%'  reduce 45
	')'  reduce 45
	';'  reduce 45


state 21
	exp : NUM .  (42)

	.  reduce 42


state 22
	cmd : READ . '(' ID ')' ';'  (19)

	'('  shift 39
	.  error


state 23
	cmd : WRITE . '(' LIT ')' ';'  (16)
	cmd : WRITE . '(' LIT $$4 ',' exp ')' ';'  (18)

	'('  shift 40
	.  error


state 24
	cmd : IF . '(' exp $$11 ')' cmd restoIf  (30)

	'('  shift 41
	.  error


state 25
	cmd : WHILE . $$5 '(' exp ')' $$6 cmdWhile  (22)
	$$5 : .  (20)

	.  reduce 20

	$$5  goto 42


state 26
	exp : TRUE .  (43)

	.  reduce 43


state 27
	exp : FALSE .  (44)

	.  reduce 44


state 28
	cmd : FOR . '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmdFor  (28)

	'('  shift 43
	.  error


state 29
	exp : INCR . ID  (47)

	ID  shift 44
	.  error


state 30
	cmd : DO . $$7 cmd WHILE '(' exp ')' ';'  (24)
	$$7 : .  (23)

	.  reduce 23

	$$7  goto 45


state 31
	exp : '!' . exp  (49)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 46


state 32
	exp : '(' . exp ')'  (48)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 47


state 33
	cmd : '{' . lcmd '}'  (15)
	lcmd : .  (13)

	.  reduce 13

	lcmd  goto 48


state 34
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 . '}'  (5)

	'}'  shift 49
	.  error


state 35
	lcmd : lcmd cmd .  (12)

	.  reduce 12


state 36
	cmd : exp . ';'  (14)
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	EQ  shift 50
	LEQ  shift 51
	GEQ  shift 52
	NEQ  shift 53
	AND  shift 54
	OR  shift 55
	'>'  shift 56
	'<'  shift 57
	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	';'  shift 63
	.  error


state 37
	exp : ID INCR .  (46)

	.  reduce 46


state 38
	exp : ID '=' . exp  (63)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 64


state 39
	cmd : READ '(' . ID ')' ';'  (19)

	ID  shift 65
	.  error


state 40
	cmd : WRITE '(' . LIT ')' ';'  (16)
	cmd : WRITE '(' . LIT $$4 ',' exp ')' ';'  (18)

	LIT  shift 66
	.  error


state 41
	cmd : IF '(' . exp $$11 ')' cmd restoIf  (30)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 67


state 42
	cmd : WHILE $$5 . '(' exp ')' $$6 cmdWhile  (22)

	'('  shift 68
	.  error


state 43
	cmd : FOR '(' . ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmdFor  (28)
	ExpOpc : .  (32)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	';'  reduce 32

	exp  goto 69
	ExpOpc  goto 70


state 44
	exp : INCR ID .  (47)

	.  reduce 47


state 45
	cmd : DO $$7 . cmd WHILE '(' exp ')' ';'  (24)

	ID  shift 20
	NUM  shift 21
	READ  shift 22
	WRITE  shift 23
	IF  shift 24
	WHILE  shift 25
	TRUE  shift 26
	FALSE  shift 27
	FOR  shift 28
	INCR  shift 29
	DO  shift 30
	'!'  shift 31
	'('  shift 32
	'{'  shift 33
	.  error

	cmd  goto 71
	exp  goto 36


state 46
	exp : '!' exp .  (49)
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	.  reduce 49


state 47
	exp : '(' exp . ')'  (48)
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	EQ  shift 50
	LEQ  shift 51
	GEQ  shift 52
	NEQ  shift 53
	AND  shift 54
	OR  shift 55
	'>'  shift 56
	'<'  shift 57
	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	')'  shift 72
	.  error


state 48
	lcmd : lcmd . cmd  (12)
	cmd : '{' lcmd . '}'  (15)

	ID  shift 20
	NUM  shift 21
	READ  shift 22
	WRITE  shift 23
	IF  shift 24
	WHILE  shift 25
	TRUE  shift 26
	FALSE  shift 27
	FOR  shift 28
	INCR  shift 29
	DO  shift 30
	'!'  shift 31
	'('  shift 32
	'{'  shift 33
	'}'  shift 73
	.  error

	cmd  goto 35
	exp  goto 36


state 49
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 '}' .  (5)

	.  reduce 5


state 50
	exp : exp EQ . exp  (57)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 74


state 51
	exp : exp LEQ . exp  (58)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 75


state 52
	exp : exp GEQ . exp  (59)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 76


state 53
	exp : exp NEQ . exp  (60)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 77


state 54
	exp : exp AND . exp  (62)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 78


state 55
	exp : exp OR . exp  (61)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 79


state 56
	exp : exp '>' . exp  (55)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 80


state 57
	exp : exp '<' . exp  (56)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 81


state 58
	exp : exp '+' . exp  (50)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 82


state 59
	exp : exp '-' . exp  (51)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 83


state 60
	exp : exp '*' . exp  (52)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 84


state 61
	exp : exp '/' . exp  (53)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 85


state 62
	exp : exp '%' . exp  (54)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 86


state 63
	cmd : exp ';' .  (14)

	.  reduce 14


state 64
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)
	exp : ID '=' exp .  (63)

	EQ  shift 50
	LEQ  shift 51
	GEQ  shift 52
	NEQ  shift 53
	AND  shift 54
	OR  shift 55
	'>'  shift 56
	'<'  shift 57
	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	')'  reduce 63
	';'  reduce 63


state 65
	cmd : READ '(' ID . ')' ';'  (19)

	')'  shift 87
	.  error


state 66
	cmd : WRITE '(' LIT . ')' ';'  (16)
	cmd : WRITE '(' LIT . $$4 ',' exp ')' ';'  (18)
	$$4 : .  (17)

	')'  shift 88
	','  reduce 17

	$$4  goto 89


state 67
	cmd : IF '(' exp . $$11 ')' cmd restoIf  (30)
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)
	$$11 : .  (29)

	EQ  shift 50
	LEQ  shift 51
	GEQ  shift 52
	NEQ  shift 53
	AND  shift 54
	OR  shift 55
	'>'  shift 56
	'<'  shift 57
	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	')'  reduce 29

	$$11  goto 90


state 68
	cmd : WHILE $$5 '(' . exp ')' $$6 cmdWhile  (22)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 91


state 69
	ExpOpc : exp .  (31)
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	EQ  shift 50
	LEQ  shift 51
	GEQ  shift 52
	NEQ  shift 53
	AND  shift 54
	OR  shift 55
	'>'  shift 56
	'<'  shift 57
	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	')'  reduce 31
	';'  reduce 31


state 70
	cmd : FOR '(' ExpOpc . ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmdFor  (28)

	';'  shift 92
	.  error


state 71
	cmd : DO $$7 cmd . WHILE '(' exp ')' ';'  (24)

	WHILE  shift 93
	.  error


state 72
	exp : '(' exp ')' .  (48)

	.  reduce 48


state 73
	cmd : '{' lcmd '}' .  (15)

	.  reduce 15


state 74
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp EQ exp .  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	EQ  reduce 57
	LEQ  reduce 57
	GEQ  reduce 57
	NEQ  reduce 57
	AND  reduce 57
	OR  reduce 57
	'>'  reduce 57
	'<'  reduce 57
	')'  reduce 57
	';'  reduce 57


state 75
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp LEQ exp .  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	EQ  reduce 58
	LEQ  reduce 58
	GEQ  reduce 58
	NEQ  reduce 58
	AND  reduce 58
	OR  reduce 58
	'>'  reduce 58
	'<'  reduce 58
	')'  reduce 58
	';'  reduce 58


state 76
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp GEQ exp .  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	EQ  reduce 59
	LEQ  reduce 59
	GEQ  reduce 59
	NEQ  reduce 59
	AND  reduce 59
	OR  reduce 59
	'>'  reduce 59
	'<'  reduce 59
	')'  reduce 59
	';'  reduce 59


state 77
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp NEQ exp .  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	EQ  reduce 60
	LEQ  reduce 60
	GEQ  reduce 60
	NEQ  reduce 60
	AND  reduce 60
	OR  reduce 60
	'>'  reduce 60
	'<'  reduce 60
	')'  reduce 60
	';'  reduce 60


state 78
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)
	exp : exp AND exp .  (62)

	EQ  shift 50
	LEQ  shift 51
	GEQ  shift 52
	NEQ  shift 53
	'>'  shift 56
	'<'  shift 57
	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	AND  reduce 62
	OR  reduce 62
	')'  reduce 62
	';'  reduce 62


state 79
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp OR exp .  (61)
	exp : exp . AND exp  (62)

	EQ  shift 50
	LEQ  shift 51
	GEQ  shift 52
	NEQ  shift 53
	AND  shift 54
	'>'  shift 56
	'<'  shift 57
	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	OR  reduce 61
	')'  reduce 61
	';'  reduce 61


state 80
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp '>' exp .  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	EQ  reduce 55
	LEQ  reduce 55
	GEQ  reduce 55
	NEQ  reduce 55
	AND  reduce 55
	OR  reduce 55
	'>'  reduce 55
	'<'  reduce 55
	')'  reduce 55
	';'  reduce 55


state 81
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp '<' exp .  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	EQ  reduce 56
	LEQ  reduce 56
	GEQ  reduce 56
	NEQ  reduce 56
	AND  reduce 56
	OR  reduce 56
	'>'  reduce 56
	'<'  reduce 56
	')'  reduce 56
	';'  reduce 56


state 82
	exp : exp . '+' exp  (50)
	exp : exp '+' exp .  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	EQ  reduce 50
	LEQ  reduce 50
	GEQ  reduce 50
	NEQ  reduce 50
	AND  reduce 50
	OR  reduce 50
	'>'  reduce 50
	'<'  reduce 50
	'+'  reduce 50
	'-'  reduce 50
	')'  reduce 50
	';'  reduce 50


state 83
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp '-' exp .  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	EQ  reduce 51
	LEQ  reduce 51
	GEQ  reduce 51
	NEQ  reduce 51
	AND  reduce 51
	OR  reduce 51
	'>'  reduce 51
	'<'  reduce 51
	'+'  reduce 51
	'-'  reduce 51
	')'  reduce 51
	';'  reduce 51


state 84
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp '*' exp .  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	.  reduce 52


state 85
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp '/' exp .  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	.  reduce 53


state 86
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp '%' exp .  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	.  reduce 54


state 87
	cmd : READ '(' ID ')' . ';'  (19)

	';'  shift 94
	.  error


state 88
	cmd : WRITE '(' LIT ')' . ';'  (16)

	';'  shift 95
	.  error


state 89
	cmd : WRITE '(' LIT $$4 . ',' exp ')' ';'  (18)

	','  shift 96
	.  error


state 90
	cmd : IF '(' exp $$11 . ')' cmd restoIf  (30)

	')'  shift 97
	.  error


state 91
	cmd : WHILE $$5 '(' exp . ')' $$6 cmdWhile  (22)
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	EQ  shift 50
	LEQ  shift 51
	GEQ  shift 52
	NEQ  shift 53
	AND  shift 54
	OR  shift 55
	'>'  shift 56
	'<'  shift 57
	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	')'  shift 98
	.  error


state 92
	cmd : FOR '(' ExpOpc ';' . $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmdFor  (28)
	$$8 : .  (25)

	.  reduce 25

	$$8  goto 99


state 93
	cmd : DO $$7 cmd WHILE . '(' exp ')' ';'  (24)

	'('  shift 100
	.  error


state 94
	cmd : READ '(' ID ')' ';' .  (19)

	.  reduce 19


state 95
	cmd : WRITE '(' LIT ')' ';' .  (16)

	.  reduce 16


state 96
	cmd : WRITE '(' LIT $$4 ',' . exp ')' ';'  (18)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 101


state 97
	cmd : IF '(' exp $$11 ')' . cmd restoIf  (30)

	ID  shift 20
	NUM  shift 21
	READ  shift 22
	WRITE  shift 23
	IF  shift 24
	WHILE  shift 25
	TRUE  shift 26
	FALSE  shift 27
	FOR  shift 28
	INCR  shift 29
	DO  shift 30
	'!'  shift 31
	'('  shift 32
	'{'  shift 33
	.  error

	cmd  goto 102
	exp  goto 36


state 98
	cmd : WHILE $$5 '(' exp ')' . $$6 cmdWhile  (22)
	$$6 : .  (21)

	.  reduce 21

	$$6  goto 103


state 99
	cmd : FOR '(' ExpOpc ';' $$8 . ExpOpc ';' $$9 ExpOpc $$10 ')' cmdFor  (28)
	ExpOpc : .  (32)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	';'  reduce 32

	exp  goto 69
	ExpOpc  goto 104


state 100
	cmd : DO $$7 cmd WHILE '(' . exp ')' ';'  (24)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	.  error

	exp  goto 105


state 101
	cmd : WRITE '(' LIT $$4 ',' exp . ')' ';'  (18)
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	EQ  shift 50
	LEQ  shift 51
	GEQ  shift 52
	NEQ  shift 53
	AND  shift 54
	OR  shift 55
	'>'  shift 56
	'<'  shift 57
	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	')'  shift 106
	.  error


102: shift/reduce conflict (shift 107, reduce 41) on ELSE
state 102
	cmd : IF '(' exp $$11 ')' cmd . restoIf  (30)
	restoIf : .  (41)

	ELSE  shift 107
	ID  reduce 41
	NUM  reduce 41
	READ  reduce 41
	WRITE  reduce 41
	IF  reduce 41
	WHILE  reduce 41
	TRUE  reduce 41
	FALSE  reduce 41
	FOR  reduce 41
	INCR  reduce 41
	DO  reduce 41
	'!'  reduce 41
	'('  reduce 41
	'{'  reduce 41
	'}'  reduce 41

	restoIf  goto 108


state 103
	cmd : WHILE $$5 '(' exp ')' $$6 . cmdWhile  (22)

	ID  shift 20
	NUM  shift 21
	READ  shift 22
	WRITE  shift 23
	IF  shift 24
	WHILE  shift 25
	TRUE  shift 26
	FALSE  shift 27
	FOR  shift 28
	CONTINUE  shift 109
	BREAK  shift 110
	INCR  shift 29
	DO  shift 30
	'!'  shift 31
	'('  shift 32
	'{'  shift 33
	.  error

	cmd  goto 111
	exp  goto 36
	cmdWhile  goto 112


state 104
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc . ';' $$9 ExpOpc $$10 ')' cmdFor  (28)

	';'  shift 113
	.  error


state 105
	cmd : DO $$7 cmd WHILE '(' exp . ')' ';'  (24)
	exp : exp . '+' exp  (50)
	exp : exp . '-' exp  (51)
	exp : exp . '*' exp  (52)
	exp : exp . '/' exp  (53)
	exp : exp . '%' exp  (54)
	exp : exp . '>' exp  (55)
	exp : exp . '<' exp  (56)
	exp : exp . EQ exp  (57)
	exp : exp . LEQ exp  (58)
	exp : exp . GEQ exp  (59)
	exp : exp . NEQ exp  (60)
	exp : exp . OR exp  (61)
	exp : exp . AND exp  (62)

	EQ  shift 50
	LEQ  shift 51
	GEQ  shift 52
	NEQ  shift 53
	AND  shift 54
	OR  shift 55
	'>'  shift 56
	'<'  shift 57
	'+'  shift 58
	'-'  shift 59
	'*'  shift 60
	'/'  shift 61
	'%'  shift 62
	')'  shift 114
	.  error


state 106
	cmd : WRITE '(' LIT $$4 ',' exp ')' . ';'  (18)

	';'  shift 115
	.  error


state 107
	restoIf : ELSE . $$12 cmd  (40)
	$$12 : .  (39)

	.  reduce 39

	$$12  goto 116


state 108
	cmd : IF '(' exp $$11 ')' cmd restoIf .  (30)

	.  reduce 30


state 109
	cmdWhile : CONTINUE . ';'  (37)

	';'  shift 117
	.  error


state 110
	cmdWhile : BREAK . ';'  (38)

	';'  shift 118
	.  error


state 111
	cmdWhile : cmd .  (36)

	.  reduce 36


state 112
	cmd : WHILE $$5 '(' exp ')' $$6 cmdWhile .  (22)

	.  reduce 22


state 113
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' . $$9 ExpOpc $$10 ')' cmdFor  (28)
	$$9 : .  (26)

	.  reduce 26

	$$9  goto 119


state 114
	cmd : DO $$7 cmd WHILE '(' exp ')' . ';'  (24)

	';'  shift 120
	.  error


state 115
	cmd : WRITE '(' LIT $$4 ',' exp ')' ';' .  (18)

	.  reduce 18


state 116
	restoIf : ELSE $$12 . cmd  (40)

	ID  shift 20
	NUM  shift 21
	READ  shift 22
	WRITE  shift 23
	IF  shift 24
	WHILE  shift 25
	TRUE  shift 26
	FALSE  shift 27
	FOR  shift 28
	INCR  shift 29
	DO  shift 30
	'!'  shift 31
	'('  shift 32
	'{'  shift 33
	.  error

	cmd  goto 121
	exp  goto 36


state 117
	cmdWhile : CONTINUE ';' .  (37)

	.  reduce 37


state 118
	cmdWhile : BREAK ';' .  (38)

	.  reduce 38


state 119
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 . ExpOpc $$10 ')' cmdFor  (28)
	ExpOpc : .  (32)

	ID  shift 20
	NUM  shift 21
	TRUE  shift 26
	FALSE  shift 27
	INCR  shift 29
	'!'  shift 31
	'('  shift 32
	')'  reduce 32

	exp  goto 69
	ExpOpc  goto 122


state 120
	cmd : DO $$7 cmd WHILE '(' exp ')' ';' .  (24)

	.  reduce 24


state 121
	restoIf : ELSE $$12 cmd .  (40)

	.  reduce 40


state 122
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc . $$10 ')' cmdFor  (28)
	$$10 : .  (27)

	.  reduce 27

	$$10  goto 123


state 123
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 . ')' cmdFor  (28)

	')'  shift 124
	.  error


state 124
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' . cmdFor  (28)

	ID  shift 20
	NUM  shift 21
	READ  shift 22
	WRITE  shift 23
	IF  shift 24
	WHILE  shift 25
	TRUE  shift 26
	FALSE  shift 27
	FOR  shift 28
	CONTINUE  shift 125
	BREAK  shift 126
	INCR  shift 29
	DO  shift 30
	'!'  shift 31
	'('  shift 32
	'{'  shift 33
	.  error

	cmd  goto 127
	exp  goto 36
	cmdFor  goto 128


state 125
	cmdFor : CONTINUE . ';'  (34)

	';'  shift 129
	.  error


state 126
	cmdFor : BREAK . ';'  (35)

	';'  shift 130
	.  error


state 127
	cmdFor : cmd .  (33)

	.  reduce 33


state 128
	cmd : FOR '(' ExpOpc ';' $$8 ExpOpc ';' $$9 ExpOpc $$10 ')' cmdFor .  (28)

	.  reduce 28


state 129
	cmdFor : CONTINUE ';' .  (34)

	.  reduce 34


state 130
	cmdFor : BREAK ';' .  (35)

	.  reduce 35


State 102 contains 1 shift/reduce conflict.


43 terminals, 25 nonterminals
64 grammar rules, 131 states
